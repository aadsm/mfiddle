function compile(t){return semantics.compile(t)}var Observers=require("./observers"),Operators=require("./operators");module.exports=compile;var semantics=compile.semantics={compilers:{property:Observers.makePropertyObserver,get:Observers.makeGetObserver,path:Observers.makePathObserver,"with":Observers.makeWithObserver,"if":Observers.makeConditionalObserver,parent:Observers.makeParentObserver,not:Observers.makeNotObserver,and:Observers.makeAndObserver,or:Observers.makeOrObserver,"default":Observers.makeDefaultObserver,defined:Observers.makeDefinedObserver,rangeContent:Observers.makeAsArrayObserver,mapContent:Function.identity,keys:Observers.makeKeysObserver,values:Observers.makeValuesObserver,items:Observers.makeItemsObserver,toMap:Observers.makeToMapObserver,mapBlock:Observers.makeMapBlockObserver,filterBlock:Observers.makeFilterBlockObserver,everyBlock:Observers.makeEveryBlockObserver,someBlock:Observers.makeSomeBlockObserver,sortedBlock:Observers.makeSortedBlockObserver,groupBlock:Observers.makeGroupBlockObserver,groupMapBlock:Observers.makeGroupMapBlockObserver,minBlock:Observers.makeMinBlockObserver,maxBlock:Observers.makeMaxBlockObserver,enumerate:Observers.makeEnumerationObserver,reversed:Observers.makeReversedObserver,flatten:Observers.makeFlattenObserver,concat:Observers.makeConcatObserver,view:Observers.makeViewObserver,sum:Observers.makeSumObserver,average:Observers.makeAverageObserver,has:Observers.makeHasObserver,tuple:Observers.makeArrayObserver,range:Observers.makeRangeObserver,startsWith:Observers.makeStartsWithObserver,endsWith:Observers.makeEndsWithObserver,contains:Observers.makeContainsObserver,asArray:Observers.makeAsArrayObserver},compile:function(t){var e=this.compilers;if("literal"===t.type)return Observers.makeLiteralObserver(t.value);if("value"===t.type)return Observers.observeValue;if("parameters"===t.type)return Observers.observeParameters;if("element"===t.type)return Observers.makeElementObserver(t.id);if("component"===t.type)return Observers.makeComponentObserver(t.label,t);if("record"===t.type){var n={},i=t.args;for(var a in i)n[a]=this.compile(i[a]);return Observers.makeObjectObserver(n)}e.hasOwnProperty(t.type)||(e[t.type]=Observers.makeMethodObserverMaker(t.type));var r=t.args.map(this.compile,this);return e[t.type].apply(null,r)}},compilers=semantics.compilers;Object.keys(Operators).forEach(function(t){compilers[t]||(compilers[t]=Observers.makeOperatorObserverMaker(Operators[t]))});