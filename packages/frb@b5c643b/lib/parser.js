function makeParser(t){return function(e){var n,i=0,r=1,a=t.apply(this,[function(t){return n=t,expectEof()}].concat(Array.prototype.slice.call(arguments,1)));try{for(var s=0;e.length>s;s++)a=a(e[s],{index:s,line:r,column:i}),"\n"===e[s]?(r++,i=0):i++;a=a("",{index:s,line:r,column:i})}catch(o){if(o.loc){var l=o.loc;o.message+=e.length>80?" at line "+l.line+", column "+l.column:" in "+JSON.stringify(e)+" at index "+l.index}throw o}return n}}function expectEof(){return function(t,e){if(""!==t){var n=Error("Unexpected "+JSON.stringify(t));throw n.loc=e,n}return function i(){return i}}}function makeExpect(t){return function(e){return function(n,i){return n===t?e(n,i):e(null,i)(n,i)}}}exports.makeParser=makeParser,exports.expectEof=expectEof,exports.makeExpect=makeExpect;