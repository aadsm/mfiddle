montageDefine("e47202a","compile-binder",{dependencies:["./compile-observer","./observers","./binders","./algebra"],factory:function(t,e,n){function i(t){return i.semantics.compile(t)}var a=t("./compile-observer");t("./observers");var r=t("./binders"),s=t("./algebra"),o={type:"value"},l={type:"literal",value:!0};n.exports=i,i.semantics={compilers:{property:r.makePropertyBinder,get:r.makeGetBinder,has:r.makeHasBinder,only:r.makeOnlyBinder,rangeContent:r.makeRangeContentBinder,mapContent:r.makeMapContentBinder,reversed:r.makeReversedBinder,and:r.makeAndBinder,or:r.makeOrBinder},compile:function(t){var e=this.compilers;if("default"===t.type)return this.compile(t.args[0]);if("literal"===t.type){if(null==t.value)return Function.noop;throw Error("Can't bind to literal: "+t.value)}if("equals"===t.type){var n=this.compile(t.args[0]),i=a(t.args[1]);return r.makeEqualityBinder(n,i)}if("if"===t.type){var c=a(t.args[0]),h=this.compile(t.args[1]),u=this.compile(t.args[2]);return r.makeConditionalBinder(c,h,u)}if("and"===t.type||"or"===t.type){var d=s(t.args[0],o),p=s(t.args[1],o),n=this.compile(d[0]),g=this.compile(p[0]),m=a(d[1]),v=a(p[1]),f=a(t.args[0]),i=a(t.args[1]);return this.compilers[t.type](n,g,f,i,m,v)}if("everyBlock"===t.type){var L=a(t.args[0]),y=s(t.args[1],l),_=this.compile(y[0]),b=a(y[1]);return r.makeEveryBlockBinder(L,_,b)}if("rangeContent"===t.type){var C,w=a(t.args[0]);try{C=this.compile(t.args[0])}catch(x){C=Function.noop}return r.makeRangeContentBinder(w,C)}if("defined"===t.type){var C=this.compile(t.args[0]);return r.makeDefinedBinder(C)}if(e.hasOwnProperty(t.type)){var M=t.args.map(a,a.semantics);return e[t.type].apply(null,M)}throw Error("Can't compile binder for "+JSON.stringify(t.type))}}}});