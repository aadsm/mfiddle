var common=require("../common"),assert=require("assert"),stream=require("../../readable");(function(){var e=1e3,t=new stream.Readable;t._read=function(n){n=Math.min(e,n),e-=n,t.push(new Buffer(n))};var n;t.unpipe=function(e){n=e,stream.Readable.prototype.unpipe.call(this,e)};var a=new stream.Writable;a._write=function(e,t,n){n()},t.pipe(a);var i=null;a.on("error",function(e){i=e});var r;a.on("unpipe",function(e){r=e});var s=Error("This stream turned into bacon.");a.emit("error",s),assert.strictEqual(i,s),assert.strictEqual(r,t),assert.strictEqual(n,a)})(),function(){var e=1e3,t=new stream.Readable;t._read=function(n){n=Math.min(e,n),e-=n,t.push(new Buffer(n))};var n;t.unpipe=function(e){n=e,stream.Readable.prototype.unpipe.call(this,e)};var a=new stream.Writable;a._write=function(e,t,n){n()},t.pipe(a);var i;a.on("unpipe",function(e){i=e});var r=Error("This stream turned into bacon."),s=null;try{a.emit("error",r)}catch(o){s=o}assert.strictEqual(s,r),assert.strictEqual(i,t),assert.strictEqual(n,a)}();